Index: src/main/java/com/project/dodung/DictionaryManagement.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.dodung;\r\n\r\nimport java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\n\r\npublic class DictionaryManagement {\r\n    /**\r\n     * Connect to a sample database\r\n     */\r\n    public static void connect() {\r\n        try {\r\n            // db parameters\r\n            String url = \"jdbc:sqlite:dict_hh.db\";\r\n            // create a connection to the database\r\n            conn = DriverManager.getConnection(url);\r\n\r\n            System.out.println(\"Connection to SQLite has been established.\");\r\n\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n\r\n\r\n    public static boolean internetConnection() {\r\n        boolean flag = true;\r\n        try {\r\n            String url = \"www.google.com\";\r\n            conn = DriverManager.getConnection(url);\r\n            System.out.println(\"Connection to Internet has been established.\");\r\n        } catch (Exception e) {\r\n            flag = false;\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return flag;\r\n    }\r\n\r\n    /**\r\n     * Thử lại đi ;-; không chắc lắm đâu.\r\n     */\r\n    public static ArrayList<Pair<Integer, String>> stringSimilarWords(Word w) {\r\n        ArrayList<Pair<Integer, String>> res = new ArrayList<>();\r\n        myTrie.reset();\r\n        String word = w.getWord();\r\n        int lastPosOnTrie = myTrie.traverseNonInsert(word);\r\n        if (lastPosOnTrie == 0 && word.length() > 0) {\r\n            return res;\r\n        }\r\n        ArrayList<Integer> ListId = new ArrayList<>();\r\n        myTrie.findSimilar(ListId, lastPosOnTrie);\r\n        Pair<Integer, String> toAdd = new Pair<>();\r\n        System.out.println(\"Similar word to \" + word + \":\");\r\n        for (Integer re : ListId) {\r\n            toAdd.setKey(re);\r\n            toAdd.setValue(DictionaryManagement.selectWordWithId(re));\r\n            res.add(toAdd);\r\n            System.out.println(DictionaryManagement.selectWordWithId(re));\r\n        }\r\n        return res;\r\n    }\r\n\r\n    public static ArrayList<String> stringSimilarWord(String s) {\r\n        ArrayList<String> res = new ArrayList<>();\r\n        myTrie.reset();\r\n        int lastPosOnTrie = myTrie.traverseNonInsert(s);\r\n        if (lastPosOnTrie == 0 && s.length()>0) {\r\n            return res;\r\n        }\r\n        ArrayList<Integer> ListId = new ArrayList<>();\r\n        myTrie.findSimilar(ListId, lastPosOnTrie);\r\n        for (Integer re : ListId) {\r\n            String temp = DictionaryManagement.selectWordWithId(re);\r\n            res.add(temp);\r\n        }\r\n        return res;\r\n    }\r\n\r\n\r\n    public static void buildTrie() {\r\n        String sql = \"SELECT id, word FROM av\";\r\n\r\n        try (Statement stmt = conn.createStatement();\r\n             ResultSet rs = stmt.executeQuery(sql)) {\r\n\r\n            // loop through the result set\r\n            while (rs.next()) {\r\n                myTrie.addWord(Word.normalizeWord(rs.getString(\"word\")), rs.getInt(\"id\"));\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n\r\n    public static void selectAll() {\r\n        String sql = \"SELECT id, word FROM av\";\r\n\r\n        try (Statement stmt = conn.createStatement();\r\n             ResultSet rs = stmt.executeQuery(sql)) {\r\n\r\n            // loop through the result set\r\n            while (rs.next()) {\r\n                System.out.println(rs.getInt(\"id\") + \"\\t\" +\r\n                        rs.getString(\"word\"));\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n\r\n\r\n    public static void updateWord(Word w) {\r\n        String sql = \"UPDATE av SET html = ? \"\r\n                + \"WHERE id = ?\";\r\n        if (w.getId() == 0) return;\r\n        try (PreparedStatement preStatement = conn.prepareStatement(sql)) {\r\n            preStatement.setString(1, w.getHtml());\r\n            preStatement.setInt(2, w.getId());\r\n            // update\r\n            preStatement.executeUpdate();\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n\r\n    public static void deleteWord(Word w) throws nonExistException {\r\n        if (w.getId() == 0 || Objects.equals(w.getWord(), \"\")) {\r\n            throw new nonExistException(\"Word does not exist\");\r\n        }\r\n        String sql = \"DELETE FROM av WHERE id = ?\";\r\n        // Delete on trie\r\n        myTrie.deleteWord(w.getWord());\r\n        try (PreparedStatement preStatement = conn.prepareStatement(sql)) {\r\n            preStatement.setInt(1, w.getId());\r\n            preStatement.executeUpdate();\r\n\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n\r\n    public static String selectWordWithId(int id) {\r\n        String sql = \"SELECT word FROM av WHERE id = ?\";\r\n        if (id == 0) return \"\";\r\n        try (PreparedStatement preStatement = conn.prepareStatement(sql)) {\r\n            preStatement.setInt(1, id);\r\n            try (ResultSet rs = preStatement.executeQuery()) {\r\n                return Word.normalizeWord(rs.getString(\"word\"));\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    public static String selectWordHtmlWithId(int id) {\r\n        String sql = \"SELECT html FROM av WHERE id = ?\";\r\n        if (id == 0) return \"\";\r\n        try (PreparedStatement preStatement = conn.prepareStatement(sql)) {\r\n            preStatement.setInt(1, id);\r\n            try (ResultSet rs = preStatement.executeQuery()) {\r\n                return rs.getString(\"word\");\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    public static Pair<String, String> selectWordAndHtmlWithId(int id) {\r\n        String sql = \"SELECT word,html FROM av WHERE id = ?\";\r\n        Pair<String, String> ret = new Pair<>();\r\n        if (id == 0) return ret;\r\n        try (PreparedStatement preStatement = conn.prepareStatement(sql)) {\r\n            preStatement.setInt(1, id);\r\n            try (ResultSet rs = preStatement.executeQuery()) {\r\n                ret.setKey(Word.normalizeWord(rs.getString(\"word\")));\r\n                ret.setValue(rs.getString(\"html\"));\r\n                return ret;\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    public static void insertWordToTable(Word w) throws existException {\r\n        if (getWordId(w) <= 0) {\r\n            throw new existException(w.getWord() + \" already exists\");\r\n        }\r\n        String sql = \"INSERT INTO av(id,word,html) VALUES(?,?,?)\";\r\n        ++maxWordId;\r\n        myTrie.addWord(w.getWord(), w.getId());\r\n        try (PreparedStatement preStatement = conn.prepareStatement(sql)) {\r\n            preStatement.setInt(1, w.getId());\r\n            preStatement.setString(2, w.getWord());\r\n            preStatement.setString(3, w.getHtml());\r\n            preStatement.executeUpdate();\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n\r\n    public static int getWordId(Word w) {\r\n        return myTrie.findWordId(w.getWord());\r\n    }\r\n\r\n    public static int getMaxWordId() {\r\n        return maxWordId;\r\n    }\r\n\r\n    public static Connection conn = null;\r\n    private static final Trie myTrie = new Trie();\r\n    /**\r\n     * Sẽ sửa lại nếu có sort word khi tắt chương trình.\r\n     */\r\n    private static int maxWordId = 108854;\r\n\r\n    public static void main(String[] args) {\r\n        DictionaryManagement.connect();\r\n        DictionaryManagement.buildTrie();\r\n        Word w = new Word(\"min\");\r\n        Word w1 = new Word(\"cut\");\r\n        System.out.println(w.getId());\r\n        System.out.println(w1.getId());\r\n        System.out.println(\"1\");\r\n        System.out.println(DictionaryManagement.selectWordWithId(123));\r\n        //DictionaryManagement.stringSimilarWords(w);\r\n        DictionaryManagement.stringSimilarWords(w1);\r\n        DictionaryManagement.stringSimilarWord(\"min\");\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/dodung/DictionaryManagement.java b/src/main/java/com/project/dodung/DictionaryManagement.java
--- a/src/main/java/com/project/dodung/DictionaryManagement.java	(revision 0a78652adc310ba96efb9995f355c6c9fabf97d8)
+++ b/src/main/java/com/project/dodung/DictionaryManagement.java	(date 1649953988629)
@@ -229,5 +229,6 @@
         //DictionaryManagement.stringSimilarWords(w);
         DictionaryManagement.stringSimilarWords(w1);
         DictionaryManagement.stringSimilarWord("min");
+        System.out.println(DictionaryManagement.selectWordHtmlWithId(123));
     }
 }
\ No newline at end of file
Index: src/main/java/com/project/UI/addWord.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.UI;\r\nimport com.project.dodung.DictionaryManagement;\r\nimport com.project.dodung.*;\r\nimport javax.swing.*;\r\nimport java.awt.event.*;\r\nimport com.project.UI.DictionaryApplication;\r\n\r\npublic class addWord extends JDialog {\r\n    private JPanel contentPane;\r\n    private JButton buttonOK;\r\n    private JButton buttonCancel;\r\n    private JTextField addPronounTextfield;\r\n    private JTextField addWordText;\r\n    private JTextField addDefTextField;\r\n    private JPanel addWordPanel;\r\n    private JLabel addWordLabel;\r\n    private JPanel newPronounPanel;\r\n    private JLabel newPronounLabel;\r\n    private JPanel newDefPanel;\r\n    private JLabel newDefLabel;\r\n\r\n    public addWord() {\r\n        setContentPane(contentPane);\r\n        setModal(true);\r\n        getRootPane().setDefaultButton(buttonOK);\r\n\r\n        buttonOK.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent e) {\r\n                onOK();\r\n            }\r\n        });\r\n\r\n        buttonCancel.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent e) {\r\n                onCancel();\r\n            }\r\n        });\r\n\r\n        // call onCancel() when cross is clicked\r\n        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);\r\n        addWindowListener(new WindowAdapter() {\r\n            public void windowClosing(WindowEvent e) {\r\n                onCancel();\r\n            }\r\n        });\r\n\r\n        // call onCancel() on ESCAPE\r\n        contentPane.registerKeyboardAction(new ActionListener() {\r\n            public void actionPerformed(ActionEvent e) {\r\n                onCancel();\r\n            }\r\n        }, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);\r\n\r\n\r\n    }\r\n\r\n    private void onOK() {\r\n        Word w = new Word(addWordText.getText(),1);\r\n        try{\r\n            System.out.println(w.getWord());\r\n            DictionaryManagement.insertWordToTable(w);\r\n        }\r\n        catch (existException e){\r\n            JOptionPane.showMessageDialog(contentPane,e.getMessage());\r\n        }\r\n        //DictionaryManagement.insertWordToTable();\r\n        dispose();\r\n    }\r\n\r\n    private void onCancel() {\r\n        // add your code here if necessary\r\n        dispose();\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        addWord dialog = new addWord();\r\n        dialog.pack();\r\n        dialog.setVisible(true);\r\n        System.exit(0);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/UI/addWord.java b/src/main/java/com/project/UI/addWord.java
--- a/src/main/java/com/project/UI/addWord.java	(revision 0a78652adc310ba96efb9995f355c6c9fabf97d8)
+++ b/src/main/java/com/project/UI/addWord.java	(date 1649899529119)
@@ -24,17 +24,9 @@
         setModal(true);
         getRootPane().setDefaultButton(buttonOK);
 
-        buttonOK.addActionListener(new ActionListener() {
-            public void actionPerformed(ActionEvent e) {
-                onOK();
-            }
-        });
+        buttonOK.addActionListener(e -> onOK());
 
-        buttonCancel.addActionListener(new ActionListener() {
-            public void actionPerformed(ActionEvent e) {
-                onCancel();
-            }
-        });
+        buttonCancel.addActionListener(e -> onCancel());
 
         // call onCancel() when cross is clicked
         setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
@@ -45,17 +37,13 @@
         });
 
         // call onCancel() on ESCAPE
-        contentPane.registerKeyboardAction(new ActionListener() {
-            public void actionPerformed(ActionEvent e) {
-                onCancel();
-            }
-        }, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
+        contentPane.registerKeyboardAction(e -> onCancel(), KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
 
 
     }
 
     private void onOK() {
-        Word w = new Word(addWordText.getText(),1);
+        Word w = new Word(addWordText.getText());
         try{
             System.out.println(w.getWord());
             DictionaryManagement.insertWordToTable(w);
Index: src/main/java/com/project/UI/DictionaryApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.UI;\r\n\r\nimport com.project.dodung.DictionaryManagement;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.event.*;\r\n\r\n/**\r\n * cửa sổ chính có 4 mục: transWord,transSentence,addWord và delWord.\r\n */\r\n\r\n\r\npublic class DictionaryApplication extends JFrame {\r\n\r\n    /**\r\n     * panel chính và nhãn ghi tên app\r\n     */\r\n    private JPanel appPanel;\r\n    private JLabel appLabel;\r\n    /**\r\n     * 4 panel con.\r\n     */\r\n    private JPanel transWordPanel;\r\n    private JButton transWordButton;\r\n    private JLabel transWordLabel;\r\n\r\n    private JPanel addWordPanel;\r\n    private JLabel addWordLabel;\r\n    private JButton addWordButton;\r\n\r\n\r\n    private JPanel delWordPanel;\r\n    private JLabel delWordLabel;\r\n    private JButton delWordButton;\r\n\r\n\r\n    private JPanel transSentencePanel;\r\n    private JLabel transSentenceLabel;\r\n    private JButton transSentenceButton;\r\n\r\n\r\n    private JTextField transWordText;\r\n    private JTextField transSentenceText;\r\n    private JButton editWordButton;\r\n    private JList suggestionTransWordList;\r\n    /**\r\n     * Input from Different Area.\r\n     */\r\n    public static String addStr;\r\n    public static String addPro;\r\n    public static String addDef;\r\n    public static String delStr;\r\n    public static String editStr;\r\n    public static String transStr;\r\n    public static String sentence;\r\n\r\n    /**\r\n     * khởi chạy (cũng không hiểu mớ này lắm)\r\n     * @param title String\r\n     */\r\n    public DictionaryApplication(String title){\r\n        super(title);\r\n        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        this.setContentPane(appPanel);\r\n        this.pack();\r\n\r\n        DictionaryManagement.connect();\r\n        DictionaryManagement.buildTrie();\r\n\r\n        addWordButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                addWord dialog = new addWord();\r\n                dialog.pack();\r\n                dialog.setVisible(true);\r\n            }\r\n        });\r\n\r\n        delWordButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                delWord dialog = new delWord();\r\n                dialog.pack();\r\n                dialog.setVisible(true);\r\n            }\r\n        });\r\n\r\n        transWordButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                transStr = transWordText.getText();\r\n                transWord dialog = new transWord();\r\n                dialog.pack();\r\n                dialog.setVisible(true);\r\n            }\r\n        });\r\n\r\n\r\n        transSentenceButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                sentence = transSentenceText.getText();\r\n                transSentence dialog = new transSentence();\r\n                dialog.pack();\r\n                dialog.setVisible(true);\r\n            }\r\n        });\r\n        editWordButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                editWord dialog = new editWord();\r\n                dialog.pack();\r\n                dialog.setVisible(true);\r\n            }\r\n        });\r\n        transWordText.addKeyListener(new KeyAdapter() {\r\n            @Override\r\n            public void keyReleased(KeyEvent e) {\r\n                super.keyReleased(e);\r\n                DefaultListModel<String>listModel=new DefaultListModel<>();\r\n                String s= transWordText.getText();\r\n                listModel.addAll(DictionaryManagement.stringSimilarWord(s));\r\n                suggestionTransWordList.setModel(listModel);\r\n            }\r\n        });\r\n\r\n        suggestionTransWordList.addMouseListener(new MouseAdapter() {\r\n            @Override\r\n            public void mouseClicked(MouseEvent e) {\r\n                super.mouseClicked(e);\r\n                transWordText.setText(suggestionTransWordList.getSelectedValue().toString());\r\n            }\r\n        });\r\n    }\r\n\r\n    public static String getTransStr() {\r\n        return transStr;\r\n    }\r\n\r\n    public static String getSentence() {\r\n        return sentence;\r\n    }\r\n\r\n    public static void main(String[] args){\r\n        JFrame frame = new DictionaryApplication(\"Dictionary pro vjp\");\r\n        frame.setVisible(true);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/UI/DictionaryApplication.java b/src/main/java/com/project/UI/DictionaryApplication.java
--- a/src/main/java/com/project/UI/DictionaryApplication.java	(revision 0a78652adc310ba96efb9995f355c6c9fabf97d8)
+++ b/src/main/java/com/project/UI/DictionaryApplication.java	(date 1649953495766)
@@ -55,7 +55,7 @@
     public static String sentence;
 
     /**
-     * khởi chạy (cũng không hiểu mớ này lắm)
+     * khởi chạy (cũng không hiểu mớ này lắm).
      * @param title String
      */
     public DictionaryApplication(String title){
@@ -67,51 +67,36 @@
         DictionaryManagement.connect();
         DictionaryManagement.buildTrie();
 
-        addWordButton.addActionListener(new ActionListener() {
-            @Override
-            public void actionPerformed(ActionEvent e) {
-                addWord dialog = new addWord();
-                dialog.pack();
-                dialog.setVisible(true);
-            }
+        addWordButton.addActionListener(e -> {
+            addWord dialog = new addWord();
+            dialog.pack();
+            dialog.setVisible(true);
         });
 
-        delWordButton.addActionListener(new ActionListener() {
-            @Override
-            public void actionPerformed(ActionEvent e) {
-                delWord dialog = new delWord();
-                dialog.pack();
-                dialog.setVisible(true);
-            }
+        delWordButton.addActionListener(e -> {
+            delWord dialog = new delWord();
+            dialog.pack();
+            dialog.setVisible(true);
         });
 
-        transWordButton.addActionListener(new ActionListener() {
-            @Override
-            public void actionPerformed(ActionEvent e) {
-                transStr = transWordText.getText();
-                transWord dialog = new transWord();
-                dialog.pack();
-                dialog.setVisible(true);
-            }
+        transWordButton.addActionListener(e -> {
+            transStr = transWordText.getText();
+            transWord dialog = new transWord();
+            dialog.pack();
+            dialog.setVisible(true);
         });
 
 
-        transSentenceButton.addActionListener(new ActionListener() {
-            @Override
-            public void actionPerformed(ActionEvent e) {
-                sentence = transSentenceText.getText();
-                transSentence dialog = new transSentence();
-                dialog.pack();
-                dialog.setVisible(true);
-            }
+        transSentenceButton.addActionListener(e -> {
+            sentence = transSentenceText.getText();
+            transSentence dialog = new transSentence();
+            dialog.pack();
+            dialog.setVisible(true);
         });
-        editWordButton.addActionListener(new ActionListener() {
-            @Override
-            public void actionPerformed(ActionEvent e) {
-                editWord dialog = new editWord();
-                dialog.pack();
-                dialog.setVisible(true);
-            }
+        editWordButton.addActionListener(e -> {
+            editWord dialog = new editWord();
+            dialog.pack();
+            dialog.setVisible(true);
         });
         transWordText.addKeyListener(new KeyAdapter() {
             @Override
Index: src/main/java/com/project/UI/transWord.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.UI;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.event.*;\r\n\r\nimport static com.project.UI.DictionaryApplication.transStr;\r\n\r\npublic class transWord extends JDialog {\r\n    private JPanel contentPane;\r\n    private JButton buttonOK;\r\n    private JButton buttonEdit;\r\n    private JLabel transWordLabel;\r\n    private JLabel inputWordLabel;\r\n    private JLabel definitionLabel;\r\n    private JTextArea transWordDefText;\r\n\r\n    public transWord() {\r\n        setContentPane(contentPane);\r\n        setModal(true);\r\n        getRootPane().setDefaultButton(buttonOK);\r\n\r\n        String label = transStr;\r\n        transWordLabel.setText(\"Translation: \" + label);\r\n\r\n        inputWordLabel.setText(\"/\"+\"NULL\"+\"/\");\r\n\r\n        buttonOK.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent e) {\r\n                onOK();\r\n            }\r\n        });\r\n\r\n        buttonEdit.addActionListener(new ActionListener() {\r\n            public void actionPerformed(ActionEvent e) {\r\n                onEdit();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void onOK() {\r\n        // add your code here\r\n        dispose();\r\n    }\r\n\r\n    private void onEdit() {\r\n        // add your code here if necessary\r\n        DictionaryApplication.editStr=inputWordLabel.getText();\r\n        completeWord dialog = new completeWord();\r\n        dialog.pack();\r\n        dialog.setVisible(true);\r\n        dispose();\r\n    }\r\n\r\n\r\n\r\n\r\n    public static void main(String[] args) {\r\n        transWord dialog = new transWord();\r\n        dialog.pack();\r\n        dialog.setVisible(true);\r\n        System.exit(0);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/UI/transWord.java b/src/main/java/com/project/UI/transWord.java
--- a/src/main/java/com/project/UI/transWord.java	(revision 0a78652adc310ba96efb9995f355c6c9fabf97d8)
+++ b/src/main/java/com/project/UI/transWord.java	(date 1649953937046)
@@ -35,8 +35,6 @@
                 onEdit();
             }
         });
-
-
     }
 
     private void onOK() {
@@ -53,9 +51,6 @@
         dispose();
     }
 
-
-
-
     public static void main(String[] args) {
         transWord dialog = new transWord();
         dialog.pack();
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"2bb3ffc9-46c0-4061-818b-8d974bfa4f25\" name=\"Changes\" comment=\".\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/project/UI/editWord.form\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/project/UI/editWord.form\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/project/UI/editWord.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/project/UI/editWord.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/project/UI/transWord.form\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/project/UI/transWord.form\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/project/UI/transWord.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/project/UI/transWord.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"27MChOpqj3x4uS90bSVeDs4mNVh\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager.SHOW\" value=\"true\" />\r\n    <property name=\"UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager.WIDTH\" value=\"228\" />\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.DictionaryApplication\">\r\n    <configuration name=\"DictionaryApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.project.UI.DictionaryApplication\" />\r\n      <module name=\"untitled\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.project.UI.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"DictionaryManagement\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.project.dodung.DictionaryManagement\" />\r\n      <module name=\"untitled\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.project.dodung.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"DoDungMain\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.project.dodung.DoDungMain\" />\r\n      <module name=\"untitled\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.project.dodung.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"delWord\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.project.UI.delWord\" />\r\n      <module name=\"untitled\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.project.UI.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"transWord\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.project.UI.transWord\" />\r\n      <module name=\"untitled\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.project.UI.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.DictionaryApplication\" />\r\n        <item itemvalue=\"Application.transWord\" />\r\n        <item itemvalue=\"Application.DictionaryManagement\" />\r\n        <item itemvalue=\"Application.DoDungMain\" />\r\n        <item itemvalue=\"Application.delWord\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"2bb3ffc9-46c0-4061-818b-8d974bfa4f25\" name=\"Changes\" comment=\"mini change\" />\r\n      <created>1649120695601</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1649120695601</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"add suggest UI :v\">\r\n      <created>1649522865688</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1649522865688</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\".\">\r\n      <created>1649688992085</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1649688992085</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"add suggest UI :v\" />\r\n    <MESSAGE value=\".\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\".\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 0a78652adc310ba96efb9995f355c6c9fabf97d8)
+++ b/.idea/workspace.xml	(date 1649953961115)
@@ -6,10 +6,10 @@
   <component name="ChangeListManager">
     <list default="true" id="2bb3ffc9-46c0-4061-818b-8d974bfa4f25" name="Changes" comment=".">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/project/UI/editWord.form" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/UI/editWord.form" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/project/UI/editWord.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/UI/editWord.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/project/UI/transWord.form" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/UI/transWord.form" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/project/UI/DictionaryApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/UI/DictionaryApplication.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/project/UI/addWord.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/UI/addWord.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/project/UI/transWord.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/UI/transWord.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/project/dodung/DictionaryManagement.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/dodung/DictionaryManagement.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -36,7 +36,7 @@
     <property name="UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager.SHOW" value="true" />
     <property name="UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager.WIDTH" value="228" />
   </component>
-  <component name="RunManager" selected="Application.DictionaryApplication">
+  <component name="RunManager" selected="Application.DictionaryManagement">
     <configuration name="DictionaryApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="com.project.UI.DictionaryApplication" />
       <module name="untitled" />
@@ -89,24 +89,10 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="transWord" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="com.project.UI.transWord" />
-      <module name="untitled" />
-      <extension name="coverage">
-        <pattern>
-          <option name="PATTERN" value="com.project.UI.*" />
-          <option name="ENABLED" value="true" />
-        </pattern>
-      </extension>
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
     <recent_temporary>
       <list>
+        <item itemvalue="Application.DictionaryManagement" />
         <item itemvalue="Application.DictionaryApplication" />
-        <item itemvalue="Application.transWord" />
-        <item itemvalue="Application.DictionaryManagement" />
         <item itemvalue="Application.DoDungMain" />
         <item itemvalue="Application.delWord" />
       </list>
